#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import rospy
from sensor_msgs.msg import BatteryState
from pfe_modbus.msg import fanmsg, powersensormsg, statusmsg
from pfe_modbus.srv import fancontrol

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QTableWidgetItem


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1300, 900)
        MainWindow.setMinimumSize(QtCore.QSize(500, 500))
        font = QtGui.QFont()
        font.setFamily("Bitstream Vera Sans")
        MainWindow.setFont(font)
        MainWindow.setWindowTitle("")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(740, 310, 285, 271))
        self.groupBox.setObjectName("groupBox")
        self.layoutWidget = QtWidgets.QWidget(self.groupBox)
        self.layoutWidget.setGeometry(QtCore.QRect(10, 160, 261, 41))
        self.layoutWidget.setObjectName("layoutWidget")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.layoutWidget)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.Fan2Temp_LCD = QtWidgets.QLCDNumber(self.layoutWidget)
        self.Fan2Temp_LCD.setAutoFillBackground(True)
        self.Fan2Temp_LCD.setObjectName("Fan2Temp_LCD")
        self.horizontalLayout_2.addWidget(self.Fan2Temp_LCD)
        self.Fan2Speed_LCD = QtWidgets.QLCDNumber(self.layoutWidget)
        self.Fan2Speed_LCD.setAutoFillBackground(True)
        self.Fan2Speed_LCD.setObjectName("Fan2Speed_LCD")
        self.horizontalLayout_2.addWidget(self.Fan2Speed_LCD)
        self.layoutWidget1 = QtWidgets.QWidget(self.groupBox)
        self.layoutWidget1.setGeometry(QtCore.QRect(60, 220, 211, 28))
        self.layoutWidget1.setObjectName("layoutWidget1")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.layoutWidget1)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.SpeedPreset_label = QtWidgets.QLabel(self.layoutWidget1)
        self.SpeedPreset_label.setObjectName("SpeedPreset_label")
        self.horizontalLayout_3.addWidget(self.SpeedPreset_label)
        self.SpeedPreset_comboBox = QtWidgets.QComboBox(self.layoutWidget1)
        self.SpeedPreset_comboBox.setObjectName("SpeedPreset_comboBox")
        self.SpeedPreset_comboBox.addItem("")
        self.SpeedPreset_comboBox.addItem("")
        self.SpeedPreset_comboBox.addItem("")
        self.SpeedPreset_comboBox.addItem("")
        self.horizontalLayout_3.addWidget(self.SpeedPreset_comboBox)
        self.layoutWidget2 = QtWidgets.QWidget(self.groupBox)
        self.layoutWidget2.setGeometry(QtCore.QRect(10, 70, 261, 41))
        self.layoutWidget2.setObjectName("layoutWidget2")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.layoutWidget2)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.Fan1Temp_LCD = QtWidgets.QLCDNumber(self.layoutWidget2)
        self.Fan1Temp_LCD.setAutoFillBackground(True)
        self.Fan1Temp_LCD.setObjectName("Fan1Temp_LCD")
        self.horizontalLayout.addWidget(self.Fan1Temp_LCD)
        self.Fan1Speed_LCD = QtWidgets.QLCDNumber(self.layoutWidget2)
        self.Fan1Speed_LCD.setAutoFillBackground(True)
        self.Fan1Speed_LCD.setObjectName("Fan1Speed_LCD")
        self.horizontalLayout.addWidget(self.Fan1Speed_LCD)
        self.splitter = QtWidgets.QSplitter(self.groupBox)
        self.splitter.setGeometry(QtCore.QRect(10, 40, 261, 18))
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setHandleWidth(18)
        self.splitter.setObjectName("splitter")
        self.Fan1Temp_label = QtWidgets.QLabel(self.splitter)
        self.Fan1Temp_label.setObjectName("Fan1Temp_label")
        self.Fan1Speed_label = QtWidgets.QLabel(self.splitter)
        self.Fan1Speed_label.setObjectName("Fan1Speed_label")
        self.splitter_2 = QtWidgets.QSplitter(self.groupBox)
        self.splitter_2.setGeometry(QtCore.QRect(10, 130, 261, 18))
        self.splitter_2.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_2.setHandleWidth(23)
        self.splitter_2.setObjectName("splitter_2")
        self.Fan2Temp_label = QtWidgets.QLabel(self.splitter_2)
        self.Fan2Temp_label.setObjectName("Fan2Temp_label")
        self.Fan2Speed_label = QtWidgets.QLabel(self.splitter_2)
        self.Fan2Speed_label.setObjectName("Fan2Speed_label")
        self.BattMonitor_GroupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.BattMonitor_GroupBox.setGeometry(QtCore.QRect(30, 30, 691, 761))
        self.BattMonitor_GroupBox.setObjectName("BattMonitor_GroupBox")
        self.layoutWidget3 = QtWidgets.QWidget(self.BattMonitor_GroupBox)
        self.layoutWidget3.setGeometry(QtCore.QRect(210, 40, 169, 41))
        self.layoutWidget3.setObjectName("layoutWidget3")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.layoutWidget3)
        self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.comboBox = QtWidgets.QComboBox(self.layoutWidget3)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.horizontalLayout_4.addWidget(self.comboBox)
        self.label = QtWidgets.QLabel(self.layoutWidget3)
        self.label.setObjectName("label")
        self.horizontalLayout_4.addWidget(self.label)
        self.layoutWidget4 = QtWidgets.QWidget(self.BattMonitor_GroupBox)
        self.layoutWidget4.setGeometry(QtCore.QRect(30, 110, 631, 611))
        self.layoutWidget4.setObjectName("layoutWidget4")
        self.gridLayout = QtWidgets.QGridLayout(self.layoutWidget4)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.Batt1_table = QtWidgets.QTableWidget(self.layoutWidget4)
        self.Batt1_table.setMaximumSize(QtCore.QSize(312, 199))
        self.Batt1_table.setObjectName("Batt1_table")
        self.Batt1_table.setColumnCount(1)
        self.Batt1_table.setRowCount(5)
        item = QtWidgets.QTableWidgetItem()
        self.Batt1_table.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.Batt1_table.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.Batt1_table.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.Batt1_table.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.Batt1_table.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Bitstream Vera Sans Mono")
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.Batt1_table.setHorizontalHeaderItem(0, item)
        self.gridLayout.addWidget(self.Batt1_table, 1, 0, 1, 1)
        self.Batt4_table = QtWidgets.QTableWidget(self.layoutWidget4)
        self.Batt4_table.setMaximumSize(QtCore.QSize(312, 199))
        self.Batt4_table.setObjectName("Batt4_table")
        self.Batt4_table.setColumnCount(1)
        self.Batt4_table.setRowCount(5)
        item = QtWidgets.QTableWidgetItem()
        self.Batt4_table.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.Batt4_table.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.Batt4_table.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.Batt4_table.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.Batt4_table.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Bitstream Vera Sans Mono")
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.Batt4_table.setHorizontalHeaderItem(0, item)
        self.gridLayout.addWidget(self.Batt4_table, 1, 1, 1, 1)
        self.Batt3_table = QtWidgets.QTableWidget(self.layoutWidget4)
        self.Batt3_table.setMaximumSize(QtCore.QSize(312, 199))
        self.Batt3_table.setObjectName("Batt3_table")
        self.Batt3_table.setColumnCount(1)
        self.Batt3_table.setRowCount(5)
        item = QtWidgets.QTableWidgetItem()
        self.Batt3_table.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.Batt3_table.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.Batt3_table.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.Batt3_table.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.Batt3_table.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Bitstream Vera Sans Mono")
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.Batt3_table.setHorizontalHeaderItem(0, item)
        self.gridLayout.addWidget(self.Batt3_table, 0, 1, 1, 1)
        self.Batt0_table = QtWidgets.QTableWidget(self.layoutWidget4)
        self.Batt0_table.setMaximumSize(QtCore.QSize(312, 199))
        self.Batt0_table.setObjectName("Batt0_table")
        self.Batt0_table.setColumnCount(1)
        self.Batt0_table.setRowCount(5)
        item = QtWidgets.QTableWidgetItem()
        self.Batt0_table.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.Batt0_table.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.Batt0_table.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.Batt0_table.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.Batt0_table.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Bitstream Vera Sans Mono")
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.Batt0_table.setHorizontalHeaderItem(0, item)
        self.gridLayout.addWidget(self.Batt0_table, 0, 0, 1, 1)
        self.Batt2_table = QtWidgets.QTableWidget(self.layoutWidget4)
        self.Batt2_table.setMaximumSize(QtCore.QSize(312, 199))
        self.Batt2_table.setObjectName("Batt2_table")
        self.Batt2_table.setColumnCount(1)
        self.Batt2_table.setRowCount(5)
        item = QtWidgets.QTableWidgetItem()
        self.Batt2_table.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.Batt2_table.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.Batt2_table.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.Batt2_table.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.Batt2_table.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Bitstream Vera Sans Mono")
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.Batt2_table.setHorizontalHeaderItem(0, item)
        self.gridLayout.addWidget(self.Batt2_table, 2, 0, 1, 1)
        self.PowerSensor_GroupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.PowerSensor_GroupBox.setGeometry(QtCore.QRect(740, 40, 531, 241))
        self.PowerSensor_GroupBox.setObjectName("PowerSensor_GroupBox")
        self.splitter_5 = QtWidgets.QSplitter(self.PowerSensor_GroupBox)
        self.splitter_5.setGeometry(QtCore.QRect(270, 112, 241, 31))
        self.splitter_5.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_5.setHandleWidth(30)
        self.splitter_5.setObjectName("splitter_5")
        self.Fan1Temp_label_6 = QtWidgets.QLabel(self.splitter_5)
        self.Fan1Temp_label_6.setObjectName("Fan1Temp_label_6")
        self.CSV_LCD = QtWidgets.QLCDNumber(self.splitter_5)
        self.CSV_LCD.setAutoFillBackground(True)
        self.CSV_LCD.setObjectName("CSV_LCD")
        self.splitter_6 = QtWidgets.QSplitter(self.PowerSensor_GroupBox)
        self.splitter_6.setGeometry(QtCore.QRect(270, 162, 241, 31))
        self.splitter_6.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_6.setHandleWidth(30)
        self.splitter_6.setObjectName("splitter_6")
        self.Fan1Temp_label_7 = QtWidgets.QLabel(self.splitter_6)
        self.Fan1Temp_label_7.setObjectName("Fan1Temp_label_7")
        self.CSI_LCD = QtWidgets.QLCDNumber(self.splitter_6)
        self.CSI_LCD.setAutoFillBackground(True)
        self.CSI_LCD.setObjectName("CSI_LCD")
        self.splitter_3 = QtWidgets.QSplitter(self.PowerSensor_GroupBox)
        self.splitter_3.setGeometry(QtCore.QRect(10, 112, 231, 31))
        self.splitter_3.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_3.setHandleWidth(27)
        self.splitter_3.setObjectName("splitter_3")
        self.Fan1Temp_label_3 = QtWidgets.QLabel(self.splitter_3)
        self.Fan1Temp_label_3.setObjectName("Fan1Temp_label_3")
        self.PSV_LCD = QtWidgets.QLCDNumber(self.splitter_3)
        self.PSV_LCD.setAutoFillBackground(True)
        self.PSV_LCD.setObjectName("PSV_LCD")
        self.splitter_4 = QtWidgets.QSplitter(self.PowerSensor_GroupBox)
        self.splitter_4.setGeometry(QtCore.QRect(10, 162, 231, 31))
        self.splitter_4.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_4.setHandleWidth(27)
        self.splitter_4.setObjectName("splitter_4")
        self.Fan1Temp_label_4 = QtWidgets.QLabel(self.splitter_4)
        self.Fan1Temp_label_4.setObjectName("Fan1Temp_label_4")
        self.PSI_LCD = QtWidgets.QLCDNumber(self.splitter_4)
        self.PSI_LCD.setAutoFillBackground(True)
        self.PSI_LCD.setObjectName("PSI_LCD")
        self.splitter_7 = QtWidgets.QSplitter(self.PowerSensor_GroupBox)
        self.splitter_7.setGeometry(QtCore.QRect(10, 62, 231, 31))
        self.splitter_7.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_7.setHandleWidth(3)
        self.splitter_7.setObjectName("splitter_7")
        self.Fan1Temp_label_2 = QtWidgets.QLabel(self.splitter_7)
        self.Fan1Temp_label_2.setObjectName("Fan1Temp_label_2")
        self.PSWATT_LCD = QtWidgets.QLCDNumber(self.splitter_7)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.PSWATT_LCD.setFont(font)
        self.PSWATT_LCD.setFocusPolicy(QtCore.Qt.NoFocus)
        self.PSWATT_LCD.setAcceptDrops(False)
        self.PSWATT_LCD.setAutoFillBackground(True)
        self.PSWATT_LCD.setObjectName("PSWATT_LCD")
        self.splitter_8 = QtWidgets.QSplitter(self.PowerSensor_GroupBox)
        self.splitter_8.setGeometry(QtCore.QRect(270, 62, 241, 31))
        self.splitter_8.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_8.setHandleWidth(0)
        self.splitter_8.setObjectName("splitter_8")
        self.Fan1Temp_label_5 = QtWidgets.QLabel(self.splitter_8)
        self.Fan1Temp_label_5.setObjectName("Fan1Temp_label_5")
        self.CSWATT_LCD = QtWidgets.QLCDNumber(self.splitter_8)
        self.CSWATT_LCD.setAutoFillBackground(True)
        self.CSWATT_LCD.setObjectName("CSWATT_LCD")
        self.Charge_btn = QtWidgets.QPushButton(self.centralwidget)
        self.Charge_btn.setGeometry(QtCore.QRect(1130, 700, 141, 81))
        self.Charge_btn.setObjectName("Charge_btn")
        self.Stop_btn = QtWidgets.QPushButton(self.centralwidget)
        self.Stop_btn.setGeometry(QtCore.QRect(960, 700, 141, 81))
        self.Stop_btn.setObjectName("Stop_btn")
        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_2.setGeometry(QtCore.QRect(1040, 310, 231, 271))
        self.groupBox_2.setObjectName("groupBox_2")
        self.layoutWidget5 = QtWidgets.QWidget(self.groupBox_2)
        self.layoutWidget5.setGeometry(QtCore.QRect(20, 30, 211, 231))
        self.layoutWidget5.setObjectName("layoutWidget5")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidget5)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.Sup1_status = QtWidgets.QCheckBox(self.layoutWidget5)
        self.Sup1_status.setAutoFillBackground(False)
        self.Sup1_status.setCheckable(False)
        self.Sup1_status.setObjectName("Sup1_status")
        self.verticalLayout.addWidget(self.Sup1_status)
        self.SupH1_status = QtWidgets.QCheckBox(self.layoutWidget5)
        self.SupH1_status.setCheckable(False)
        self.SupH1_status.setObjectName("SupH1_status")
        self.verticalLayout.addWidget(self.SupH1_status)
        self.Sup2_status = QtWidgets.QCheckBox(self.layoutWidget5)
        self.Sup2_status.setCheckable(False)
        self.Sup2_status.setObjectName("Sup2_status")
        self.verticalLayout.addWidget(self.Sup2_status)
        self.SupH2_status = QtWidgets.QCheckBox(self.layoutWidget5)
        self.SupH2_status.setCheckable(False)
        self.SupH2_status.setObjectName("SupH2_status")
        self.verticalLayout.addWidget(self.SupH2_status)
        self.Emer_status = QtWidgets.QCheckBox(self.layoutWidget5)
        self.Emer_status.setCheckable(False)
        self.Emer_status.setObjectName("Emer_status")
        self.verticalLayout.addWidget(self.Emer_status)
        self.CtrlSW_status = QtWidgets.QCheckBox(self.layoutWidget5)
        self.CtrlSW_status.setCheckable(False)
        self.CtrlSW_status.setObjectName("CtrlSW_status")
        self.verticalLayout.addWidget(self.CtrlSW_status)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1300, 23))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar_2 = QtWidgets.QToolBar(MainWindow)
        self.toolBar_2.setObjectName("toolBar_2")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar_2)
        self.actionSave = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("/home/nitipon/catkin_ws/src/pfe_modbus/ui/Icon/001-floppy-disk.png"),
                       QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSave.setIcon(icon)
        self.actionSave.setObjectName("actionSave")
        self.actionStart = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("/home/nitipon/catkin_ws/src/pfe_modbus/ui/Icon/start.ico"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionStart.setIcon(icon1)
        self.actionStart.setObjectName("actionStart")
        self.actionStop = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("/home/nitipon/catkin_ws/src/pfe_modbus/ui/Icon/stop.ico"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionStop.setIcon(icon2)
        self.actionStop.setObjectName("actionStop")
        self.toolBar_2.addAction(self.actionSave)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        self.groupBox.setTitle(_translate("MainWindow", "Fan Control Panel"))
        self.SpeedPreset_label.setText(
            _translate("MainWindow", "Speed Preset"))
        self.SpeedPreset_comboBox.setItemText(
            0, _translate("MainWindow", "OFF"))
        self.SpeedPreset_comboBox.setItemText(
            1, _translate("MainWindow", "LOW"))
        self.SpeedPreset_comboBox.setItemText(
            2, _translate("MainWindow", "MID"))
        self.SpeedPreset_comboBox.setItemText(
            3, _translate("MainWindow", "HIGH"))
        self.Fan1Temp_label.setText(_translate("MainWindow", "Fan 1 Temp"))
        self.Fan1Speed_label.setText(_translate("MainWindow", "Fan 1 Speed"))
        self.Fan2Temp_label.setText(_translate("MainWindow", "Fan 2 Temp"))
        self.Fan2Speed_label.setText(_translate("MainWindow", "Fan 2 Speed"))
        self.BattMonitor_GroupBox.setTitle(
            _translate("MainWindow", "Batteries Monitor"))
        self.comboBox.setItemText(0, _translate("MainWindow", "1"))
        self.comboBox.setItemText(1, _translate("MainWindow", "2"))
        self.comboBox.setItemText(2, _translate("MainWindow", "3"))
        self.comboBox.setItemText(3, _translate("MainWindow", "4"))
        self.comboBox.setItemText(4, _translate("MainWindow", "5"))
        self.label.setText(_translate("MainWindow", "Batteries"))
        item = self.Batt1_table.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "Voltage"))
        item = self.Batt1_table.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "Current"))
        item = self.Batt1_table.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "Charge"))
        item = self.Batt1_table.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "Capacity"))
        item = self.Batt1_table.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "Percentage"))
        item = self.Batt1_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Battery1"))
        item = self.Batt4_table.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "Voltage"))
        item = self.Batt4_table.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "Current"))
        item = self.Batt4_table.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "Charge"))
        item = self.Batt4_table.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "Capacity"))
        item = self.Batt4_table.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "Percentage"))
        item = self.Batt4_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Battery4"))
        item = self.Batt3_table.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "Voltage"))
        item = self.Batt3_table.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "Current"))
        item = self.Batt3_table.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "Charge"))
        item = self.Batt3_table.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "Capacity"))
        item = self.Batt3_table.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "Percentage"))
        item = self.Batt3_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Battery3"))
        item = self.Batt0_table.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "Voltage"))
        item = self.Batt0_table.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "Current"))
        item = self.Batt0_table.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "Charge"))
        item = self.Batt0_table.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "Capacity"))
        item = self.Batt0_table.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "Percentage"))
        item = self.Batt0_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Battery0"))
        item = self.Batt2_table.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "Voltage"))
        item = self.Batt2_table.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "Current"))
        item = self.Batt2_table.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "Charge"))
        item = self.Batt2_table.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "Capacity"))
        item = self.Batt2_table.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "Percentage"))
        item = self.Batt2_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Battery2"))
        self.PowerSensor_GroupBox.setTitle(
            _translate("MainWindow", "Power Sensor"))
        self.Fan1Temp_label_6.setText(
            _translate("MainWindow", "Control Sensor(V)"))
        self.Fan1Temp_label_7.setText(
            _translate("MainWindow", "Control Sensor(I)"))
        self.Fan1Temp_label_3.setText(
            _translate("MainWindow", "Power Sensor(V)"))
        self.Fan1Temp_label_4.setText(
            _translate("MainWindow", "Power Sensor(I)"))
        self.Fan1Temp_label_2.setText(
            _translate("MainWindow", "Power Sensor(Watt)"))
        self.Fan1Temp_label_5.setText(_translate(
            "MainWindow", "Control Sensor(Watt)"))
        self.Charge_btn.setText(_translate("MainWindow", "Charge Require"))
        self.Stop_btn.setText(_translate("MainWindow", "Stop Require"))
        self.groupBox_2.setTitle(_translate("MainWindow", "Status"))
        self.Sup1_status.setText(_translate("MainWindow", "Supply status 1"))
        self.SupH1_status.setText(_translate(
            "MainWindow", "Power supply health  1"))
        self.Sup2_status.setText(_translate("MainWindow", "Supply status 2"))
        self.SupH2_status.setText(_translate(
            "MainWindow", "Power supply health 2 "))
        self.Emer_status.setText(_translate("MainWindow", "Emergency Switch"))
        self.CtrlSW_status.setText(_translate("MainWindow", "Control Switch"))
        self.toolBar_2.setWindowTitle(_translate("MainWindow", "toolBar_2"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionSave.setToolTip(_translate(
            "MainWindow", "Save to text file"))
        self.actionSave.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionStart.setText(_translate("MainWindow", "Start"))
        self.actionStart.setToolTip(
            _translate("MainWindow", "Start subscribe"))
        self.actionStart.setShortcut(_translate("MainWindow", "Ctrl+R"))
        self.actionStop.setText(_translate("MainWindow", "Stop"))
        self.actionStop.setToolTip(_translate("MainWindow", "Stop subscribe"))
        self.actionStop.setShortcut(_translate("MainWindow", "Ctrl+P"))
        self.setNumberOfBattery()
        self.setFanSpeed()
        # self.pfe_listener()

        # Action
        self.SpeedPreset_comboBox.currentTextChanged.connect(self.setFanSpeed)
        self.comboBox.currentTextChanged.connect(self.setNumberOfBattery)
        self.Charge_btn.clicked.connect(self.Charge)
        self.Stop_btn.clicked.connect(self.Emer)
        self.actionSave.triggered.connect(self.saveFile)

    def Charge(self):
        print("Charge Button Clicked")

    def Emer(self):
        print("Stop Button Clicked")

    def setNumberOfBattery(self):
        print("Set Battery to "+(self.comboBox.currentText()))
        if(self.comboBox.currentText() == '5'):
            self.Batt0_table.show()
            self.Batt1_table.show()
            self.Batt2_table.show()
            self.Batt3_table.show()
            self.Batt4_table.show()
        elif(self.comboBox.currentText() == '4'):
            self.Batt0_table.show()
            self.Batt1_table.show()
            self.Batt2_table.show()
            self.Batt3_table.show()
            self.Batt4_table.hide()
        elif(self.comboBox.currentText() == '3'):
            self.Batt0_table.show()
            self.Batt1_table.show()
            self.Batt2_table.show()
            self.Batt3_table.hide()
            self.Batt4_table.hide()
        elif(self.comboBox.currentText() == '2'):
            self.Batt0_table.show()
            self.Batt1_table.show()
            self.Batt2_table.hide()
            self.Batt3_table.hide()
            self.Batt4_table.hide()
        elif(self.comboBox.currentText() == '1'):
            self.Batt0_table.show()
            self.Batt1_table.hide()
            self.Batt2_table.hide()
            self.Batt3_table.hide()
            self.Batt4_table.hide()

    def setFanSpeed(self):
        print("Set Fan speed to " + (self.SpeedPreset_comboBox.currentText()))

    def StartSubscribe(self):
        print("Start Subscribe")

    def StopSubscribe(self):
        print("Stop Subscribe")

    def saveFile(self):
        # S_File will get the directory path and extension.
        S__File = QtWidgets.QFileDialog.getSaveFileName(
            None, 'SaveTextFile', '/', "Text Files (*.txt)")

        Text = self.pfe_listener

        if S__File[0]:
            with open(S__File[0], 'w+') as file:
                file.write(Text)
                S__File.close()

    def pfe_batt(self, data):
        if data.serial_number == '0':
            self.Batt0_table.removeRow(5)
            self.Batt0_table.setItem(0, 0, QTableWidgetItem(str(data.voltage)))
            self.Batt0_table.setItem(0, 1, QTableWidgetItem(str(data.current)))
            self.Batt0_table.setItem(0, 2, QTableWidgetItem(str(data.charge)))
            self.Batt0_table.setItem(
                0, 3, QTableWidgetItem(str(data.capacity)))
            self.Batt0_table.setItem(
                0, 4, QTableWidgetItem(str(data.percentage)))
            self.Batt0_table.insertRow(5)
            self.Batt0_table.removeRow(5)

        if data.serial_number == '1':
            self.Batt1_table.setItem(0, 0, QTableWidgetItem(str(data.voltage)))
            self.Batt1_table.setItem(0, 1, QTableWidgetItem(str(data.current)))
            self.Batt1_table.setItem(0, 2, QTableWidgetItem(str(data.charge)))
            self.Batt1_table.setItem(
                0, 3, QTableWidgetItem(str(data.capacity)))
            self.Batt1_table.setItem(
                0, 4, QTableWidgetItem(str(data.percentage)))
            self.Batt1_table.insertRow(5)
            self.Batt1_table.removeRow(5)

        if data.serial_number == '2':
            self.Batt2_table.setItem(0, 0, QTableWidgetItem(str(data.voltage)))
            self.Batt2_table.setItem(0, 1, QTableWidgetItem(str(data.current)))
            self.Batt2_table.setItem(0, 2, QTableWidgetItem(str(data.charge)))
            self.Batt2_table.setItem(
                0, 3, QTableWidgetItem(str(data.capacity)))
            self.Batt2_table.setItem(
                0, 4, QTableWidgetItem(str(data.percentage)))
            self.Batt2_table.insertRow(5)
            self.Batt2_table.removeRow(5)

        if data.serial_number == '3':
            self.Batt3_table.setItem(0, 0, QTableWidgetItem(str(data.voltage)))
            self.Batt3_table.setItem(0, 1, QTableWidgetItem(str(data.current)))
            self.Batt3_table.setItem(0, 2, QTableWidgetItem(str(data.charge)))
            self.Batt3_table.setItem(
                0, 3, QTableWidgetItem(str(data.capacity)))
            self.Batt3_table.setItem(
                0, 4, QTableWidgetItem(str(data.percentage)))
            self.Batt3_table.insertRow(5)
            self.Batt3_table.removeRow(5)

        if data.serial_number == '4':
            self.Batt4_table.setItem(0, 0, QTableWidgetItem(str(data.voltage)))
            self.Batt4_table.setItem(0, 1, QTableWidgetItem(str(data.current)))
            self.Batt4_table.setItem(0, 2, QTableWidgetItem(str(data.charge)))
            self.Batt4_table.setItem(
                0, 3, QTableWidgetItem(str(data.capacity)))
            self.Batt4_table.setItem(
                0, 4, QTableWidgetItem(str(data.percentage)))
            self.Batt4_table.insertRow(5)
            self.Batt4_table.removeRow(5)
        # pass

    def pfe_status(self, data):
        self.Emer_status.setCheckState(data.Emergency_Switch)
        self.CtrlSW_status.setCheckState(data.Control_Switch)
        self.Sup1_status.setCheckState(data.Supply_status1)
        self.SupH1_status.setCheckState(data.Power_supply_health1)
        self.Sup2_status.setCheckState(data.Supply_status2)
        self.SupH2_status.setCheckState(data.Power_supply_health2)

    def pfe_fans(self, data):
        self.Fan1Speed_LCD.display(data.fan1Speed)
        self.Fan1Temp_LCD.display(data.fan1Temp)
        self.Fan2Speed_LCD.display(data.fan2Speed)
        self.Fan2Temp_LCD.display(data.fan2Temp)

    def pfe_sensor(self, data):
        self.PSWATT_LCD.display(data.PowerSensorW)
        self.PSI_LCD.display(data.PowerSensorI)
        self.PSV_LCD.display(data.PowerSensorV)
        self.CSWATT_LCD.display(data.CTRLPowerSensorW)
        self.CSI_LCD.display(data.CTRLPowerSensorI)
        self.CSV_LCD.display(data.CTRLPowerSensorV)

    def pfe_listener(self):
        rospy.init_node('modbusSup_UI', anonymous=True)
        rospy.Subscriber('pfe_battery', BatteryState, self.pfe_batt)
        rospy.Subscriber('pfe_status', statusmsg, self.pfe_status)
        rospy.Subscriber('pfe_fans', fanmsg, self.pfe_fans)
        rospy.Subscriber('pfe_power_sensors', powersensormsg, self.pfe_sensor)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    try:
        ui.pfe_listener()
        sys.exit(app.exec_())
    except SystemExit:
        print('Closing window...')
